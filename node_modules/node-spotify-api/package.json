{
  "_args": [
    [
      {
        "raw": "node-spotify-api",
        "scope": null,
        "escapedName": "node-spotify-api",
        "name": "node-spotify-api",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/James/Code/trapped-server"
    ]
  ],
  "_from": "node-spotify-api@latest",
  "_id": "node-spotify-api@1.0.7",
  "_inCache": true,
  "_location": "/node-spotify-api",
  "_nodeVersion": "6.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-spotify-api-1.0.7.tgz_1502949197308_0.8311314955353737"
  },
  "_npmUser": {
    "name": "chriseckenrode",
    "email": "eckenrodechristian@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-spotify-api",
    "scope": null,
    "escapedName": "node-spotify-api",
    "name": "node-spotify-api",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-spotify-api/-/node-spotify-api-1.0.7.tgz",
  "_shasum": "09dd3088428fbf1d0ca4cdf6bbb2d1236bdaa934",
  "_shrinkwrap": null,
  "_spec": "node-spotify-api",
  "_where": "/Users/James/Code/trapped-server",
  "author": {
    "name": "Christian Eckenrode",
    "email": "christian@develop.io"
  },
  "bugs": {
    "url": "https://github.com/ceckenrode/node-spotify-api/issues"
  },
  "dependencies": {
    "request": "^2.81.0",
    "request-promise": "^4.2.1"
  },
  "description": "A simple wrapper for the spotify api",
  "devDependencies": {
    "@types/request-promise": "^4.1.36",
    "rollup": "^0.47.6",
    "typescript": "^2.4.2",
    "uglifyjs": "^2.4.11"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-/nM5ImBjgatzdRHc3MVY+t9iynC0LpO1PEkOlfyG1ogtlny2dQ++oq9m3qLJocbEqtZxtg66w5z4DXxdlSOsSg==",
    "shasum": "09dd3088428fbf1d0ca4cdf6bbb2d1236bdaa934",
    "tarball": "https://registry.npmjs.org/node-spotify-api/-/node-spotify-api-1.0.7.tgz"
  },
  "gitHead": "311491462b89167240a904f79a45669d54ae73d9",
  "homepage": "https://github.com/ceckenrode/node-spotify-api#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chriseckenrode",
      "email": "eckenrodechristian@gmail.com"
    }
  ],
  "name": "node-spotify-api",
  "optionalDependencies": {},
  "readme": "# Node Spotify API üöÄ üé∂ \n\nA simple to use API library for the Spotify REST API. \n\n## Installation\n\n`npm install --save node-spotify-api`\n\n## API\n\nCurrently there are two methods available, `search` and 'request' ü§∑‚Äç‚ôÇÔ∏è:\n\n### Search\n\n`search` is the EASIEST way to find an artist, album, or track.\n\n```js\nsearch: function({ type: 'artist OR album OR track', query: 'My search query', limit: 20 }, callback);\n```\n\n#### Example\n\n```js\nvar Spotify = require('node-spotify-api');\n\nvar spotify = new Spotify({\n  id: <your spotify client id>,\n  secret: <your spotify client secret>\n});\n\nspotify.search({ type: 'track', query: 'All the Small Things' }, function(err, data) {\n  if (err) {\n    return console.log('Error occurred: ' + err);\n  }\n\nconsole.log(data); \n});\n```\n\nNote: The `limit` property is optional and the search will default to 20 if one is not supplied.\n\n#### Usage with Promises\n\nThis package also optionally works with promises. Just omit the callback parameter and the search method returns a promise object containing the response:\n\n```js\nvar Spotify = require('node-spotify-api');\n\nvar spotify = new Spotify({\n  id: <your spotify client id>,\n  secret: <your spotify client secret>\n});\n\nspotify\n  .search({ type: 'track', query: 'All the Small Things' })\n  .then(function(response) {\n    console.log(response);\n  })\n  .catch(function(err) {\n    console.log(err);\n  });\n```\n\n### Request\n\n`request` can be used to make API requests to any Spotify endpoint you supply.\n\n#### Example\n\n```js\nvar Spotify = require('node-spotify-api');\n\nvar spotify = new Spotify({\n  id: <your spotify client id>,\n  secret: <your spotify client secret>\n});\n\nspotify\n  .request('https://api.spotify.com/v1/tracks/7yCPwWs66K8Ba5lFuU2bcx')\n  .then(function(data) {\n    console.log(data); \n  })\n  .catch(function(err) {\n    console.error('Error occurred: ' + err); \n  });\n```\n\n### Don't have a Spotify client id and client secret?\n\nThe Spotify API requires an authentication token to work. This package will perform all of the work of generating an authentication token for you, but you will still need to supply a client id and client secret.\n\nSign up for a Spotify developer account [here](https://developer.spotify.com/my-applications/#!/login). If you already have a Spotify account, you'll just have to log in. A membership can be paid or free, it makes no difference when it comes to using the Spotify API.\n\nOnce you're signed up, navigate to <https://developer.spotify.com/my-applications/>. You should be presented with the following page:\n\n![Applications](Images/1-Applications.png)\n\nClick the button to \"Create An App\". Once you're at the next page, fill in the required fields.\n\n![Required](Images/2-Required.png)\n\nSubmit the form and on the next page, you should be presented with a client id and secret.\n\n![Key](Images/3-Key.png)\n\nAnd you're all set!! üéâ \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ceckenrode/node-spotify-api.git"
  },
  "scripts": {
    "build": "tsc",
    "build:prod": "tsc && uglifyjs dist/index.js -o dist/index.js && rm dist/types.js"
  },
  "version": "1.0.7"
}
